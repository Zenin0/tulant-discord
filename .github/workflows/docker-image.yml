name: Docker Image CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    services:
      mongodb:
        image: mongo:latest
        ports:
          - 27017:27017
        env:
          MONGO_INITDB_ROOT_USERNAME: root
          MONGO_INITDB_ROOT_PASSWORD: example
        options: >-
          --health-cmd "mongosh --eval 'db.stats()'" 
          --health-interval 10s 
          --health-timeout 5s 
          --health-retries 5

    steps:
      - uses: actions/checkout@v4

      - name: Set up environment file
        run: |
          echo "DISCORD_TOKEN=your_token_here" >> .env
          echo "MONGO_ROOT_USER=root" >> .env
          echo "MONGO_ROOT_PASSWORD=example" >> .env
          echo "MONGO_PORT=27017" >> .env

      - name: Build Docker image
        run: docker build -t tulant-discord .

      - name: Run Discord bot container
        run: |
          docker run --rm \
            --network host \
            --env-file .env \
            --name discord-bot \
            tulant-discord &
          
          # Wait for the bot to start (adjust based on how fast your bot starts)
          sleep 10
          
          # Check if it's still running (PID will exist if healthy)
          docker ps | grep discord-bot

      - name: Clean up container (just in case)
        run: |
          docker stop discord-bot || true
